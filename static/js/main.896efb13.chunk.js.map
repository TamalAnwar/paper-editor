{"version":3,"sources":["components/_value.js","components/_sample.js","components/Editor.js","App.js","serviceWorker.js","index.js"],"names":["components_value","document","nodes","object","type","leaves","text","_sample","data","marks","title","storedValue","JSON","parse","localStorage","getItem","value","Value","fromJSON","initialValue","DEFAULT_NODE","schema","last","normalize","editor","_ref","code","node","child","paragraph","Block","create","insertNodeByKey","key","size","blocks","image","isVoid","insertImage","src","target","select","insertBlock","MarkHotkeys","options","onKeyDown","event","next","ctrlKey","preventDefault","toggleMark","plugins","MyEditor","state","nodeLimit","saveDisabled","onChange","_ref2","_this","setState","blockSize","getBlocks","ref","hasBlock","some","renderMarkButton","name","react_default","a","createElement","onMouseDown","activateMark","class","concat","renderBlockButton","parent","getParent","first","className","id","activateBlock","onClick","file","Object","assertThisInitialized","prompt","command","currentTarget","files","Promise","resolve","reject","reader","FileReader","includes","readAsDataURL","onload","result","onerror","error","window","alert","then","imageData","isActive","setBlocks","unwrapBlock","isList","isType","block","getClosest","wrapBlock","renderMark","props","mark","attributes","children","renderNode","get","assign","shiftKey","getDepth","firstBlockDepth","multiLevelSelected","map","currentKey","currentDepth","depth","onlyList","loadSampleContent","sampleValue","saveContent","content","stringify","toJSON","setItem","restoreContent","updateNodeLimit","parseInt","limit","onSubmit","this","action","method","defaultValue","disabled","slate_react_es","autoFocus","spellCheck","placeholder","Component","App","Editor_MyEditor","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.896efb13.chunk.js","sourcesContent":["export default {\r\n  document: {\r\n    nodes: [\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                text: ''\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n};\r\n","export default {\r\n  object: 'value',\r\n  document: {\r\n    object: 'document',\r\n    data: {},\r\n    nodes: [\r\n      {\r\n        object: 'block',\r\n        type: 'heading-one',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text: 'Write a Compelling Blog Meta Description\\r',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text: 'How do you ',\r\n                marks: []\r\n              },\r\n              {\r\n                object: 'leaf',\r\n                text: 'describe your blog',\r\n                marks: [\r\n                  {\r\n                    object: 'mark',\r\n                    type: 'bold',\r\n                    data: {}\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                object: 'leaf',\r\n                text: '? That’s your ',\r\n                marks: []\r\n              },\r\n              {\r\n                object: 'leaf',\r\n                text: 'meta description',\r\n                marks: [\r\n                  {\r\n                    object: 'mark',\r\n                    type: 'underline',\r\n                    data: {}\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                object: 'leaf',\r\n                text: '. Let’s say you have a blog called ',\r\n                marks: []\r\n              },\r\n              {\r\n                object: 'leaf',\r\n                text: 'KidsToys',\r\n                marks: [\r\n                  {\r\n                    object: 'mark',\r\n                    type: 'italic',\r\n                    data: {}\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                object: 'leaf',\r\n                text: ', and you blog about ',\r\n                marks: []\r\n              },\r\n              {\r\n                object: 'leaf',\r\n                text: 'hand crafted',\r\n                marks: [\r\n                  {\r\n                    object: 'mark',\r\n                    type: 'strikethrough',\r\n                    data: {}\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                object: 'leaf',\r\n                text: ' toys for kids. How do you describe it to a ',\r\n                marks: []\r\n              },\r\n              {\r\n                object: 'leaf',\r\n                text: 'friend',\r\n                marks: [\r\n                  {\r\n                    object: 'mark',\r\n                    type: 'code',\r\n                    data: {}\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                object: 'leaf',\r\n                text: '?\\r',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text: '“I write a blog about hand crafted toys for kids.”\\r',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text:\r\n                  'But how can you translate that into a description for your blog?\\r',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'bulleted-list',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'block',\r\n            type: 'list-item',\r\n            data: {},\r\n            nodes: [\r\n              {\r\n                object: 'text',\r\n                leaves: [\r\n                  {\r\n                    object: 'leaf',\r\n                    text: 'Learn how to..\\r',\r\n                    marks: []\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            object: 'block',\r\n            type: 'bulleted-list',\r\n            data: {},\r\n            nodes: [\r\n              {\r\n                object: 'block',\r\n                type: 'list-item',\r\n                data: {},\r\n                nodes: [\r\n                  {\r\n                    object: 'text',\r\n                    leaves: [\r\n                      {\r\n                        object: 'leaf',\r\n                        text: 'Write CSS',\r\n                        marks: []\r\n                      }\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            object: 'block',\r\n            type: 'list-item',\r\n            data: {},\r\n            nodes: [\r\n              {\r\n                object: 'text',\r\n                leaves: [\r\n                  {\r\n                    object: 'leaf',\r\n                    text: 'Get all the..\\r',\r\n                    marks: []\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            object: 'block',\r\n            type: 'list-item',\r\n            data: {},\r\n            nodes: [\r\n              {\r\n                object: 'text',\r\n                leaves: [\r\n                  {\r\n                    object: 'leaf',\r\n                    text: 'Take a look at how to..',\r\n                    marks: []\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            object: 'block',\r\n            type: 'bulleted-list',\r\n            data: {},\r\n            nodes: [\r\n              {\r\n                object: 'block',\r\n                type: 'list-item',\r\n                data: {},\r\n                nodes: [\r\n                  {\r\n                    object: 'text',\r\n                    leaves: [\r\n                      {\r\n                        object: 'leaf',\r\n                        text: 'Use JS',\r\n                        marks: []\r\n                      }\r\n                    ]\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                object: 'block',\r\n                type: 'bulleted-list',\r\n                data: {},\r\n                nodes: [\r\n                  {\r\n                    object: 'block',\r\n                    type: 'list-item',\r\n                    data: {},\r\n                    nodes: [\r\n                      {\r\n                        object: 'text',\r\n                        leaves: [\r\n                          {\r\n                            object: 'leaf',\r\n                            text: 'Angular',\r\n                            marks: []\r\n                          }\r\n                        ]\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    object: 'block',\r\n                    type: 'list-item',\r\n                    data: {},\r\n                    nodes: [\r\n                      {\r\n                        object: 'text',\r\n                        leaves: [\r\n                          {\r\n                            object: 'leaf',\r\n                            text: 'React',\r\n                            marks: []\r\n                          }\r\n                        ]\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    object: 'block',\r\n                    type: 'list-item',\r\n                    data: {},\r\n                    nodes: [\r\n                      {\r\n                        object: 'text',\r\n                        leaves: [\r\n                          {\r\n                            object: 'leaf',\r\n                            text: 'Vue',\r\n                            marks: []\r\n                          }\r\n                        ]\r\n                      }\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text: 'Then add a cliff hanger like,\\r',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text: 'after conducting the research we found..\\r',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'code',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text: 'int main(void) { // Do something awesome! }',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text: 'what we expected but when we..\\r',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text: '10% increase after applying this method..\\r',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text: 'Then end your description with a Call To Action, CTA:\\r',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'numbered-list',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'block',\r\n            type: 'list-item',\r\n            data: {},\r\n            nodes: [\r\n              {\r\n                object: 'text',\r\n                leaves: [\r\n                  {\r\n                    object: 'leaf',\r\n                    text: 'Click Here!\\r',\r\n                    marks: []\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            object: 'block',\r\n            type: 'list-item',\r\n            data: {},\r\n            nodes: [\r\n              {\r\n                object: 'text',\r\n                leaves: [\r\n                  {\r\n                    object: 'leaf',\r\n                    text: 'Learn How!\\r',\r\n                    marks: []\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            object: 'block',\r\n            type: 'list-item',\r\n            data: {},\r\n            nodes: [\r\n              {\r\n                object: 'text',\r\n                leaves: [\r\n                  {\r\n                    object: 'leaf',\r\n                    text: 'Want To Know More?\\r',\r\n                    marks: []\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text: 'Add a keyword in your description when possible.\\r',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text:\r\n                  'Using the ideas above we can write a appealing meta description like this:\\r',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        object: 'block',\r\n        type: 'blockquote',\r\n        data: {},\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                object: 'leaf',\r\n                text:\r\n                  '“Looking for unique gift for kids this Christmas? Check out these 10 cool hand crafted toys you can gift your toddler this Christmas! Read on!”',\r\n                marks: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Editor, getEventRange, getEventTransfer } from 'slate-react';\r\nimport { Block, Value } from 'slate';\r\nimport initialValue from './_value';\r\nimport sampleValue from './_sample';\r\n\r\ndocument.title = 'Slate Editor Project';\r\n\r\nconst storedValue = JSON.parse(localStorage.getItem('content'));\r\nconst value = Value.fromJSON(storedValue || initialValue);\r\nconst DEFAULT_NODE = 'paragraph';\r\nconst schema = {\r\n  document: {\r\n    last: { type: 'paragraph' },\r\n    normalize: (editor, { code, node, child }) => {\r\n      switch (code) {\r\n        case 'last_child_type_invalid': {\r\n          const paragraph = Block.create('paragraph');\r\n          return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  blocks: {\r\n    image: {\r\n      isVoid: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction insertImage(editor, src, target) {\r\n  if (target) {\r\n    editor.select(target);\r\n  }\r\n\r\n  editor.insertBlock({\r\n    type: 'image',\r\n    data: { src }\r\n  });\r\n}\r\n\r\nfunction MarkHotkeys(options) {\r\n  let { key, type } = options;\r\n  return {\r\n    onKeyDown(event, editor, next) {\r\n      if (!event.ctrlKey || event.key !== key) return next();\r\n      event.preventDefault();\r\n      editor.toggleMark(type);\r\n    }\r\n  };\r\n}\r\n\r\nconst plugins = [\r\n  MarkHotkeys({ key: 'b', type: 'bold' }),\r\n  MarkHotkeys({ key: 'i', type: 'italic' }),\r\n  MarkHotkeys({ key: 'u', type: 'underline' }),\r\n  MarkHotkeys({ key: '-', type: 'strikethrough' }),\r\n  MarkHotkeys({ key: '`', type: 'code' })\r\n];\r\n\r\n/**\r\n * Main app component file\r\n */\r\nexport default class MyEditor extends Component {\r\n  state = {\r\n    value: value,\r\n    nodeLimit: 0,\r\n    saveDisabled: false\r\n  };\r\n\r\n  onChange = ({ value }) => {\r\n    this.setState({ value });\r\n    let blockSize = this.editor.value.document.getBlocks().size;\r\n    let { nodeLimit } = this.state;\r\n    let saveDisabled;\r\n    if (nodeLimit !== 0 && blockSize > nodeLimit) {\r\n      saveDisabled = true;\r\n    } else {\r\n      saveDisabled = false;\r\n    }\r\n\r\n    this.setState({ saveDisabled });\r\n  };\r\n\r\n  ref = (editor) => (this.editor = editor);\r\n\r\n  hasBlock = (type) => {\r\n    let { value } = this.state;\r\n    return value.blocks.some((node) => node.type === type);\r\n  };\r\n\r\n  renderMarkButton = (type, name) => {\r\n    return (\r\n      <button\r\n        onMouseDown={(event) => this.activateMark(event, type)}\r\n        title={type}>\r\n        <i class={`fas ${name}`} />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderBlockButton = (type, name) => {\r\n    let isActive = this.hasBlock(type);\r\n\r\n    if (type === 'numbered-list' || type === 'bulleted-list') {\r\n      let { value } = this.state;\r\n      if (value.blocks.size > 0) {\r\n        let parent = value.document.getParent(value.blocks.first().key);\r\n        isActive = this.hasBlock('list-item') && parent && parent.type === type;\r\n      }\r\n    }\r\n\r\n    if (type === 'imageBrowser') {\r\n      return (\r\n        <div className=\"upload-btn-wrapper\">\r\n          <button title={type}>\r\n            <input\r\n              type=\"file\"\r\n              id=\"input-button\"\r\n              onChange={(event) => this.activateBlock(event, type)}\r\n            />\r\n            <i class={`fas ${name}`} />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <button title={type} onClick={(event) => this.activateBlock(event, type)}>\r\n        <i class={`fas ${name}`} />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  activateMark = (event, type) => {\r\n    event.preventDefault();\r\n    this.editor.toggleMark(type);\r\n  };\r\n\r\n  activateBlock = (event, type) => {\r\n    event.preventDefault();\r\n\r\n    const { editor } = this;\r\n    const { value } = editor;\r\n    const { document } = value;\r\n\r\n    if (type === 'image') {\r\n      // Show URl prompt\r\n      let src = prompt('Please enter an image url: ');\r\n      if (!src) return;\r\n      editor.command(insertImage, src);\r\n    }\r\n\r\n    if (type === 'imageBrowser') {\r\n      const getBase64 = (file) =>\r\n        new Promise((resolve, reject) => {\r\n          const reader = new FileReader();\r\n          const allowedTypes = [\r\n            'image/jpeg',\r\n            'image/jpg',\r\n            'image/png',\r\n            'image/gif'\r\n          ];\r\n          if (!allowedTypes.includes(file.type)) {\r\n            window.alert('Only jpg, png & gif image files are allowed!');\r\n            return;\r\n          }\r\n          reader.readAsDataURL(file);\r\n          reader.onload = () => resolve(reader.result);\r\n          reader.onerror = (error) => reject(error);\r\n        });\r\n      getBase64(event.currentTarget.files[0]).then((imageData) => {\r\n        editor.command(insertImage, imageData);\r\n      });\r\n    }\r\n\r\n    // Handle everything but list buttons.\r\n    if (type !== 'bulleted-list' && type !== 'numbered-list') {\r\n      const isActive = this.hasBlock(type);\r\n      const isList = this.hasBlock('list-item');\r\n\r\n      if (isList) {\r\n        editor\r\n          .setBlocks(isActive ? DEFAULT_NODE : type)\r\n          .unwrapBlock('bulleted-list')\r\n          .unwrapBlock('numbered-list');\r\n      } else {\r\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\r\n      }\r\n    } else {\r\n      // Handle the extra wrapping required for list buttons.\r\n      const isList = this.hasBlock('list-item');\r\n      const isType = value.blocks.some(\r\n        (block) =>\r\n          !!document.getClosest(block.key, (parent) => parent.type === type)\r\n      );\r\n\r\n      if (isList && isType) {\r\n        editor\r\n          .setBlocks(DEFAULT_NODE)\r\n          .unwrapBlock('bulleted-list')\r\n          .unwrapBlock('numbered-list');\r\n      } else if (isList) {\r\n        editor\r\n          .unwrapBlock(\r\n            type === 'bulleted-list' ? 'numbered-list' : 'bulleted-list'\r\n          )\r\n          .wrapBlock(type);\r\n      } else {\r\n        editor.setBlocks('list-item').wrapBlock(type);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Render Mark Function\r\n  renderMark = (props, editor, next) => {\r\n    let { mark, attributes, children } = props;\r\n    switch (mark.type) {\r\n      case 'bold':\r\n        return <strong {...attributes}>{children}</strong>;\r\n      case 'italic':\r\n        return <em {...attributes}>{children}</em>;\r\n      case 'underline':\r\n        return <u {...attributes}>{children}</u>;\r\n      case 'code':\r\n        return <code {...attributes}>{children}</code>;\r\n      case 'strikethrough':\r\n        return <del {...attributes}>{children}</del>;\r\n      default:\r\n        return next();\r\n    }\r\n  };\r\n\r\n  // Render Node Function\r\n  renderNode = (props, editor, next) => {\r\n    let { node, attributes, children } = props;\r\n    switch (node.type) {\r\n      case 'heading-one':\r\n        return <h1 {...attributes}>{children}</h1>;\r\n      case 'heading-two':\r\n        return <h2 {...attributes}>{children}</h2>;\r\n      case 'paragraph':\r\n        return <p {...attributes}>{children}</p>;\r\n      case 'blockquote':\r\n        return <blockquote {...attributes}>{children}</blockquote>;\r\n      case 'bulleted-list':\r\n        return <ul {...attributes}>{children}</ul>;\r\n      case 'numbered-list':\r\n        return <ol {...attributes}>{children}</ol>;\r\n      case 'list-item':\r\n        return <li {...attributes}>{children}</li>;\r\n      case 'code':\r\n        return (\r\n          <pre {...attributes}>\r\n            <code>{children}</code>\r\n          </pre>\r\n        );\r\n      case 'image':\r\n        let src = node.data.get('src');\r\n        return <img src={src} {...attributes} />;\r\n\r\n      default:\r\n        return next();\r\n    }\r\n  };\r\n\r\n  onKeyDown = (event, editor, next) => {\r\n    // Do nothing if it's not a list item.\r\n    let isList = this.hasBlock('list-item');\r\n\r\n    if (!isList) {\r\n      return next();\r\n    }\r\n\r\n    const { value } = editor;\r\n    const { document } = value;\r\n\r\n    const block = value.blocks.first();\r\n    const parent = block ? document.getParent(block.key) : null;\r\n\r\n    if (!event.shiftKey && event.key === 'Tab') {\r\n      event.preventDefault();\r\n\r\n      const type = !parent.type ? 'bulleted-list' : parent.type;\r\n\r\n      // check whether it's already in 3rd level\r\n      const depth = document.getDepth(block.key);\r\n      if (depth > 3) {\r\n        event.preventDefault();\r\n        return next();\r\n      }\r\n\r\n      if (parent) {\r\n        editor.setBlocks('list-item').wrapBlock(type);\r\n      }\r\n    }\r\n\r\n    if (event.shiftKey && event.key == 'Tab') {\r\n      event.preventDefault();\r\n\r\n      // if multi level list items are selected for shift+tab, then return\r\n      const firstBlockDepth = block && document.getDepth(block.key);\r\n      let multiLevelSelected = false;\r\n      value.blocks.map((currentKey) => {\r\n        const currentDepth = document.getDepth(currentKey.key);\r\n        multiLevelSelected = !!(firstBlockDepth !== currentDepth);\r\n        return true;\r\n      });\r\n      if (multiLevelSelected) return next();\r\n\r\n      // if first level list-items selected then, make paragraph\r\n      if (parent && typeof parent.type === 'undefined') {\r\n        editor\r\n          .setBlocks(DEFAULT_NODE)\r\n          .unwrapBlock('bulleted-list')\r\n          .unwrapBlock('numbered-list');\r\n        return next();\r\n      }\r\n      const depth = document.getDepth(block.key);\r\n\r\n      const isActive =\r\n        this.hasBlock('list-item') &&\r\n        block &&\r\n        (parent.type === 'numbered-list' || parent.type === 'bulleted-list');\r\n\r\n      const onlyList = this.hasBlock('list-item');\r\n\r\n      if (isActive) {\r\n        editor\r\n          .setBlocks('list-item')\r\n          .unwrapBlock('bulleted-list')\r\n          .unwrapBlock('numbered-list');\r\n      } else if (isActive && depth <= 2) {\r\n        editor\r\n          .setBlocks(DEFAULT_NODE)\r\n          .unwrapBlock('bulleted-list')\r\n          .unwrapBlock('numbered-list');\r\n      } else {\r\n        editor\r\n          .setBlocks(DEFAULT_NODE)\r\n          .unwrapBlock('bulleted-list')\r\n          .unwrapBlock('numbered-list');\r\n      }\r\n      // Making sure we don't have an orphan list item\r\n      if (onlyList && depth <= 2) {\r\n        editor\r\n          .setBlocks(DEFAULT_NODE)\r\n          .unwrapBlock('list-item')\r\n          .unwrapBlock('bulleted-list')\r\n          .unwrapBlock('numbered-list');\r\n      }\r\n    }\r\n\r\n    return next();\r\n  };\r\n\r\n  // Load Sample content\r\n  loadSampleContent = () => {\r\n    let value = Value.fromJSON(sampleValue);\r\n    this.setState({ value });\r\n  };\r\n\r\n  // Save content\r\n  saveContent = () => {\r\n    let content = JSON.stringify(this.state.value.toJSON());\r\n    localStorage.setItem('content', content);\r\n    alert('Saved to browser.');\r\n  };\r\n\r\n  // Restore content\r\n  restoreContent = () => {\r\n    const storedValue = JSON.parse(localStorage.getItem('content'));\r\n    let value = Value.fromJSON(storedValue || initialValue);\r\n    this.setState({ value });\r\n  };\r\n\r\n  updateNodeLimit = (event) => {\r\n    event.preventDefault();\r\n    let nodeLimit = parseInt(event.target.limit.value, 10);\r\n    let blockSize = this.editor.value.document.getBlocks().size;\r\n    let saveDisabled;\r\n    if (nodeLimit !== 0 && blockSize > nodeLimit) {\r\n      saveDisabled = true;\r\n    } else {\r\n      saveDisabled = false;\r\n    }\r\n    this.setState({ nodeLimit, saveDisabled });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"shell\">\r\n        <div id=\"header\">\r\n          <div className=\"wrapper\">\r\n            <div id=\"title-area\">\r\n              <div id=\"title\">\r\n                <h1>Paper</h1>\r\n              </div>\r\n              <div id=\"limiter\">\r\n                <form onSubmit={this.updateNodeLimit} action=\"/\" method=\"POST\">\r\n                  Node limit:&nbsp;\r\n                  <input\r\n                    name=\"limit\"\r\n                    type=\"number\"\r\n                    defaultValue={0}\r\n                    className=\"input-number\"\r\n                  />\r\n                  <button>Set</button>\r\n                </form>\r\n              </div>\r\n              <div id=\"menu\">\r\n                <div className=\"buttons\">\r\n                  <button onClick={this.loadSampleContent}>Load Sample</button>\r\n                  <button onClick={this.restoreContent}>Cancel</button>\r\n                  <button\r\n                    disabled={this.state.saveDisabled ? true : false}\r\n                    onClick={this.saveContent}>\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div id=\"toolbar\">\r\n              {this.renderMarkButton('bold', 'fa-bold')}\r\n              {this.renderMarkButton('italic', 'fa-italic')}\r\n              {this.renderMarkButton('underline', 'fa-underline')}\r\n              {this.renderMarkButton('strikethrough', 'fa-strikethrough')}\r\n              {this.renderMarkButton('code', 'fa-code')}\r\n              {this.renderBlockButton('heading-one', 'fa-heading')}\r\n              {this.renderBlockButton('heading-two', 'fa-heading')}\r\n              {this.renderBlockButton('paragraph', 'fa-paragraph')}\r\n              {this.renderBlockButton('code', 'fa-terminal')}\r\n              {this.renderBlockButton('blockquote', 'fa-quote-right')}\r\n              {this.renderBlockButton('numbered-list', 'fa-list-ol')}\r\n              {this.renderBlockButton('bulleted-list', 'fa-list-ul')}\r\n              {this.renderBlockButton('image', 'fa-image')}\r\n              {this.renderBlockButton('imageBrowser', 'fa-cloud-upload-alt')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"paper\" className=\"wrapper\">\r\n          <Editor\r\n            ref={this.ref}\r\n            autoFocus\r\n            spellCheck={false}\r\n            placeholder=\"Start writing..\"\r\n            value={this.state.value}\r\n            onChange={this.onChange}\r\n            onKeyDown={this.onKeyDown}\r\n            renderMark={this.renderMark}\r\n            renderNode={this.renderNode}\r\n            plugins={plugins}\r\n            schema={schema}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport MyEditor from './components/Editor';\n\nclass App extends Component {\n  render() {\n    return <MyEditor />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}